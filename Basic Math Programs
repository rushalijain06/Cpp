1) Given a number N. Count the number of digits in N which evenly divides N.
Note :- Evenly divides means whether N is divisible by a digit i.e. leaves a remainder 0 when divided.
Input:
N = 12
Output:
2
Explanation:
1, 2 both divide 12 evenly

Solution:
class Solution{
public:
    int evenlyDivides(int N){
        //code here
        int c = 0;
        int num=N;
        while(num > 0){
            int digit = num%10;
            if(digit>0 && N%digit==0){
                c+=1;
            }
            num = num/10;
        }
        return c;
    }
};


2) Given a positive integer N., The task is to find the value of    \sum_{i=1}^{i=n} F(i)  where function F(i) for the number i be defined as the sum of all divisors of ‘i‘.
Input:
N = 4
Output:
15
Explanation:
F(1) = 1
F(2) = 1 + 2 = 3
F(3) = 1 + 3 = 4
F(4) = 1 + 2 + 4 = 7
ans = F(1) + F(2) + F(3) + F(4)
    = 1 + 3 + 4 + 7
    = 15
    
Solution:
class Solution
{
public:
    long long sumOfDivisors(int N)
    {
        // Write Your Code here
        long long sum = 0;
        
           for(int i=1;i<=N;i++){
             sum += (N/i) * i;
                
            }
            
           
        return sum;
    }
};


3) Given an integer, check if it is prime or not. Print true if number is prime, print false otherwise.
Input :
7
Output :
true
 
 Solution:
#include<iostream>
using namespace std;

int main() {
	// Write your code here
	int n;
	int count = 0;
	cin >> n;
	for(int i=1;i*i<=n;i++){
		if(n%i==0){
			count+=1;
			if((n/i)!=i){
				count += 1;

		}
		}
	}
	if(count == 2)
		cout << "true";
	else
		cout << "false";
	
}


4) Given the number 'n', find out and return the number of digits present in a number.
Input :
156
Output :
3

Solution:
int count(int n){
    //write your code here
    int count = 0;
   while(n > 0){
        count += 1;
       n=n/10;
    }
    return count;
}


5) Write a program to generate the reverse of a given number N. Print the corresponding reverse number.
Note: If a number has Trailing Zeros, then it's reverse will not include them.
Input:
1980
Output:
891

Solution:
#include<iostream>
using namespace std;

int main() {
	// Write your code here
    int n;
    cin >> n;
    int revnum = 0;
    while(n>0){
        int digit = n % 10;
        revnum = (revnum * 10) + digit;
        n = n / 10;
    }
	cout << revnum;
}




